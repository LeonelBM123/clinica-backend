# Generated by Django 5.2.6 on 2025-10-12 03:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cuentas', '0002_alter_rol_nombre'),
    ]

    operations = [
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=128, unique=True, verbose_name='Nombre de la especialidad')),
            ],
            options={
                'verbose_name': 'Especialidad',
                'verbose_name_plural': 'Especialidades',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cuentas.usuario')),
                ('numero_colegiado', models.CharField(max_length=64, unique=True, verbose_name='Número de colegiado')),
                ('especialidades', models.ManyToManyField(blank=True, related_name='medicos', to='doctores.especialidad', verbose_name='Especialidades médicas')),
            ],
            options={
                'verbose_name': 'Médico',
                'verbose_name_plural': 'Médicos',
                'ordering': ['nombre'],
            },
            bases=('cuentas.usuario',),
        ),
        migrations.CreateModel(
            name='Tipo_Atencion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=128, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('estado', models.BooleanField(default=True)),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipos_atencion', to='cuentas.grupo', verbose_name='Grupo al que pertenece')),
            ],
            options={
                'verbose_name': 'Tipo de Atención',
                'verbose_name_plural': 'Tipos de Atención',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Bloque_Horario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.CharField(choices=[('LUNES', 'Lunes'), ('MARTES', 'Martes'), ('MIERCOLES', 'Miércoles'), ('JUEVES', 'Jueves'), ('VIERNES', 'Viernes'), ('SABADO', 'Sábado'), ('DOMINGO', 'Domingo')], max_length=10)),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('estado', models.BooleanField(default=True)),
                ('duracion_cita_minutos', models.PositiveIntegerField(default=30, help_text='Duración de cada cita en minutos')),
                ('max_citas_por_bloque', models.PositiveIntegerField(default=10, help_text='Número máximo de citas permitidas en este bloque horario')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bloques_horarios', to='cuentas.grupo', verbose_name='Grupo al que pertenece')),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bloques_horarios', to='doctores.medico')),
                ('tipo_atencion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bloques_horarios', to='doctores.tipo_atencion')),
            ],
            options={
                'verbose_name': 'Bloque Horario',
                'verbose_name_plural': 'Bloques Horarios',
                'ordering': ['medico', 'dia_semana', 'hora_inicio'],
                'unique_together': {('medico', 'dia_semana', 'hora_inicio', 'hora_fin')},
            },
        ),
    ]
